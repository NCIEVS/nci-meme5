{
  "id": 39854,
  "lastModified": 1502676224000,
  "lastModifiedBy": "admin",
  "timestamp": 1502676219000,
  "name": "Template Insertion process",
  "description": "Template Insertion process",
  "terminology": "TERMINOLOGY",
  "version": "VERSION",
  "feedbackEmail": null,
  "type": "Insertion",
  "inputPath": "inv/TERMINOLOGY_VERSION/insert",
  "projectId": 39751,
  "steps": [
    {
      "id": 40018,
      "lastModified": 1502676219000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676219000,
      "name": "PREINSERTION algorithm",
      "description": "PREINSERTION Algorithm",
      "algorithmKey": "PREINSERTION",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40019,
      "lastModified": 1502676220000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676220000,
      "name": "METADATALOADING algorithm",
      "description": "METADATALOADING Algorithm",
      "algorithmKey": "METADATALOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40020,
      "lastModified": 1502676220000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676220000,
      "name": "ATOMLOADING algorithm",
      "description": "ATOMLOADING Algorithm",
      "algorithmKey": "ATOMLOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40021,
      "lastModified": 1502676220000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676220000,
      "name": "RELATIONSHIPLOADING algorithm",
      "description": "RELATIONSHIPLOADING Algorithm",
      "algorithmKey": "RELATIONSHIPLOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40022,
      "lastModified": 1502676220000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676220000,
      "name": "CONTEXTLOADING algorithm",
      "description": "CONTEXTLOADING Algorithm",
      "algorithmKey": "CONTEXTLOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40023,
      "lastModified": 1502676221000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676220000,
      "name": "SEMANTICTYPELOADING algorithm",
      "description": "SEMANTICTYPELOADING Algorithm",
      "algorithmKey": "SEMANTICTYPELOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40024,
      "lastModified": 1502676221000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676221000,
      "name": "MAPSETLOADING algorithm",
      "description": "MAPSETLOADING Algorithm",
      "algorithmKey": "MAPSETLOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40025,
      "lastModified": 1502676221000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676221000,
      "name": "SUBSETLOADING algorithm",
      "description": "SUBSETLOADING Algorithm",
      "algorithmKey": "SUBSETLOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40026,
      "lastModified": 1502676221000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676221000,
      "name": "ATTRIBUTELOADING algorithm",
      "description": "ATTRIBUTELOADING Algorithm",
      "algorithmKey": "ATTRIBUTELOADING",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40027,
      "lastModified": 1502676221000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676221000,
      "name": "PRECOMPUTEDMERGE algorithm",
      "description": "PRECOMPUTEDMERGE Algorithm",
      "algorithmKey": "PRECOMPUTEDMERGE",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": [
        {
          "name": "Merge Set",
          "fieldName": "mergeSet",
          "placeholder": "e.g. NCI-SY",
          "type": "STRING",
          "length": 10,
          "description": "The merge set to perform the merges on",
          "possibleValues": [],
          "value": "TERMINOLOGY-SRC",
          "values": []
        },
        {
          "name": "Integrity Checks",
          "fieldName": "checkNames",
          "placeholder": "e.g. MGV_B",
          "type": "MULTI",
          "length": 10,
          "description": "The names of the integrity checks to run",
          "possibleValues": [
            "DEFAULT",
            "DT_I2",
            "DT_I3",
            "DT_I3B",
            "DT_M1",
            "DT_PN2",
            "MGV_A4",
            "MGV_B",
            "MGV_C",
            "MGV_E",
            "MGV_E2",
            "MGV_F",
            "MGV_G",
            "MGV_H1",
            "MGV_H2",
            "MGV_I",
            "MGV_M",
            "MGV_NCIPN",
            "MGV_SCUI",
            "MGV_SDUI"
          ],
          "value": "",
          "values": [
            ""
          ]
        },
        {
          "name": "Filter Query Type",
          "fieldName": "filterQueryType",
          "placeholder": "e.g. JPQL",
          "type": "ENUM",
          "length": 200,
          "description": "The language the filter query is written in",
          "possibleValues": [
            "JPQL",
            "SQL",
            "LUCENE",
            "PROGRAM"
          ],
          "value": "",
          "values": []
        },
        {
          "name": "Filter Query",
          "fieldName": "filterQuery",
          "placeholder": "e.g. query in format of the query type",
          "type": "TEXT",
          "length": 4000,
          "description": "A filter query to further restrict the objects to run the merge on",
          "possibleValues": [],
          "value": "",
          "values": []
        }
      ]
    },
    {
      "id": 40028,
      "lastModified": 1502676222000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676222000,
      "name": "GENERATEDMERGE algorithm",
      "description": "GENERATEDMERGE Algorithm",
      "algorithmKey": "GENERATEDMERGE",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": [
        {
          "name": "Query Type",
          "fieldName": "queryType",
          "placeholder": "e.g. JPQL",
          "type": "ENUM",
          "length": 200,
          "description": "The language the query is written in",
          "possibleValues": [
            "JPQL",
            "SQL"
          ],
          "value": "JPQL",
          "values": []
        },
        {
          "name": "Query",
          "fieldName": "query",
          "placeholder": "e.g. SELECT a.id, b.id FROM AtomJpa a, AtomJpa b ...",
          "type": "QUERY_ID_PAIR",
          "length": 4000,
          "description": "A query to perform action only on objects that meet the criteria",
          "possibleValues": [],
          "value": "select distinct a1.id, a2.id from ConceptJpa c1 join c1.atoms a1, ConceptJpa c2 join c2.atoms a2 where c1.terminology = :projectTerminology and c2.terminology = :projectTerminology and c1.id != c2.id and a1.terminology = :terminology and a1.version = :version and a1.publishable = true and a2.terminology = :terminology and a2.version != :version and a2.publishable = true and a1.codeId = a2.codeId and a1.lexicalClassId = a2.lexicalClassId and not a1.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and exclude = true) and not a2.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and exclude = true) and not a1.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and normExclude = true) and not a2.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and normExclude = true)",
          "values": []
        },
        {
          "name": "Integrity Checks",
          "fieldName": "checkNames",
          "placeholder": "e.g. MGV_B",
          "type": "MULTI",
          "length": 200,
          "description": "The names of the integrity checks to run",
          "possibleValues": [
            "DEFAULT",
            "DT_I2",
            "DT_I3",
            "DT_I3B",
            "DT_M1",
            "DT_PN2",
            "MGV_A4",
            "MGV_B",
            "MGV_C",
            "MGV_E",
            "MGV_E2",
            "MGV_F",
            "MGV_G",
            "MGV_H1",
            "MGV_H2",
            "MGV_I",
            "MGV_M",
            "MGV_NCIPN",
            "MGV_SCUI",
            "MGV_SDUI"
          ],
          "value": "",
          "values": [
            "DEFAULT",
            "DT_I2",
            "DT_I3",
            "DT_I3B",
            "DT_M1",
            "DT_PN2",
            "MGV_A4",
            "MGV_B",
            "MGV_C",
            "MGV_E",
            "MGV_F",
            "MGV_G",
            "MGV_H1",
            "MGV_H2",
            "MGV_I",
            "MGV_M",
            "MGV_NCIPN",
            "MGV_SCUI",
            "MGV_SDUI"
          ]
        },
        {
          "name": "New Atoms Only Filter",
          "fieldName": "newAtomsOnly",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Restrict to new atoms only?",
          "possibleValues": [],
          "value": "false",
          "values": []
        },
        {
          "name": "Filter Query Type",
          "fieldName": "filterQueryType",
          "placeholder": "e.g. JPQL",
          "type": "ENUM",
          "length": 200,
          "description": "The language the filter query is written in",
          "possibleValues": [
            "JPQL",
            "SQL",
            "LUCENE",
            "PROGRAM"
          ],
          "value": "",
          "values": []
        },
        {
          "name": "Filter Query",
          "fieldName": "filterQuery",
          "placeholder": "e.g. query in format of the query type",
          "type": "TEXT",
          "length": 4000,
          "description": "A filter query to further restrict the objects to run the merge on",
          "possibleValues": [],
          "value": "",
          "values": []
        },
        {
          "name": "Make Demotions",
          "fieldName": "makeDemotions",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Make demotions for failed merges?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Change Status",
          "fieldName": "changeStatus",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Change status when performing merges?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Merge Set",
          "fieldName": "mergeSet",
          "placeholder": "e.g. NCI-SY",
          "type": "STRING",
          "length": 10,
          "description": "The merge set to perform the merges on",
          "possibleValues": [],
          "value": "TERMINOLOGY-REPL",
          "values": []
        }
      ]
    },
    {
      "id": 40029,
      "lastModified": 1502676222000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676222000,
      "name": "SAFEREPLACE algorithm",
      "description": "SAFEREPLACE Algorithm",
      "algorithmKey": "SAFEREPLACE",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": [
        {
          "name": "String Class Id",
          "fieldName": "stringClassId",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Match atoms by String Class Id?",
          "possibleValues": [],
          "value": "false",
          "values": []
        },
        {
          "name": "Lexical Class Id",
          "fieldName": "lexicalClassId",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Match atoms by Lexical Class Id?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Code Id",
          "fieldName": "codeId",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Match atoms by Code Id?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Concept Id",
          "fieldName": "conceptId",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Match atoms by Concept Id?",
          "possibleValues": [],
          "value": "false",
          "values": []
        },
        {
          "name": "Descriptor Id",
          "fieldName": "descriptorId",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Match atoms by Descriptor Id?",
          "possibleValues": [],
          "value": "false",
          "values": []
        },
        {
          "name": "Term Type",
          "fieldName": "termType",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Match atoms by Term Type?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Terminology",
          "fieldName": "terminology",
          "placeholder": "e.g. NCI",
          "type": "STRING",
          "length": 5,
          "description": "Terminology to run safe replacement on (if left blank, will run on all terminologies referenced in sources.src",
          "possibleValues": [],
          "value": "",
          "values": []
        }
      ]
    },
    {
      "id": 40030,
      "lastModified": 1502676222000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676222000,
      "name": "MIDMERGE algorithm",
      "description": "MIDMERGE Algorithm",
      "algorithmKey": "MIDMERGE",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": [
        {
          "name": "Query Type",
          "fieldName": "queryType",
          "placeholder": "e.g. JPQL",
          "type": "ENUM",
          "length": 200,
          "description": "The language the query is written in",
          "possibleValues": [
            "JPQL",
            "SQL"
          ],
          "value": "JPQL",
          "values": []
        },
        {
          "name": "Query",
          "fieldName": "query",
          "placeholder": "e.g. SELECT a.id, b.id FROM AtomJpa a, AtomJpa b ...",
          "type": "QUERY_ID_PAIR",
          "length": 4000,
          "description": "A query to perform action only on objects that meet the criteria",
          "possibleValues": [],
          "value": "select distinct a1.id, a2.id from ConceptJpa c1 join c1.atoms a1, ConceptJpa c2 join c2.atoms a2 where c1.terminology = :projectTerminology and c2.terminology = :projectTerminology and c1.id != c2.id and a1.terminology = :terminology and a1.version = :version and a1.workflowStatus = 'NEEDS_REVIEW' and a1.publishable = true and a2.terminology != :terminology and a2.publishable = true and a1.lexicalClassId = a2.lexicalClassId and not a1.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and exclude = true) and not a2.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and exclude = true) and not a1.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and normExclude = true) and not a2.termType in (select tty.abbreviation from TermTypeJpa tty where terminology = :projectTerminology and normExclude = true)",
          "values": []
        },
        {
          "name": "Integrity Checks",
          "fieldName": "checkNames",
          "placeholder": "e.g. MGV_B",
          "type": "MULTI",
          "length": 200,
          "description": "The names of the integrity checks to run",
          "possibleValues": [
            "DEFAULT",
            "DT_I2",
            "DT_I3",
            "DT_I3B",
            "DT_M1",
            "DT_PN2",
            "MGV_A4",
            "MGV_B",
            "MGV_C",
            "MGV_E",
            "MGV_E2",
            "MGV_F",
            "MGV_G",
            "MGV_H1",
            "MGV_H2",
            "MGV_I",
            "MGV_M",
            "MGV_NCIPN",
            "MGV_SCUI",
            "MGV_SDUI"
          ],
          "value": "",
          "values": [
            "DEFAULT",
            "DT_I2",
            "DT_I3",
            "DT_I3B",
            "DT_M1",
            "DT_PN2",
            "MGV_A4",
            "MGV_B",
            "MGV_C",
            "MGV_E",
            "MGV_F",
            "MGV_G",
            "MGV_H1",
            "MGV_H2",
            "MGV_I",
            "MGV_M",
            "MGV_NCIPN",
            "MGV_SCUI",
            "MGV_SDUI"
          ]
        },
        {
          "name": "New Atoms Only Filter",
          "fieldName": "newAtomsOnly",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Restrict to new atoms only?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Filter Query Type",
          "fieldName": "filterQueryType",
          "placeholder": "e.g. JPQL",
          "type": "ENUM",
          "length": 200,
          "description": "The language the filter query is written in",
          "possibleValues": [
            "JPQL",
            "SQL",
            "LUCENE",
            "PROGRAM"
          ],
          "value": "LUCENE",
          "values": []
        },
        {
          "name": "Filter Query",
          "fieldName": "filterQuery",
          "placeholder": "e.g. query in format of the query type",
          "type": "TEXT",
          "length": 4000,
          "description": "A filter query to further restrict the objects to run the merge on",
          "possibleValues": [],
          "value": "",
          "values": []
        },
        {
          "name": "Make Demotions",
          "fieldName": "makeDemotions",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Make demotions for failed merges?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Change Status",
          "fieldName": "changeStatus",
          "placeholder": "e.g. true",
          "type": "BOOLEAN",
          "length": 5,
          "description": "Change status when performing merges?",
          "possibleValues": [],
          "value": "true",
          "values": []
        },
        {
          "name": "Merge Set",
          "fieldName": "mergeSet",
          "placeholder": "e.g. NCI-SY",
          "type": "STRING",
          "length": 10,
          "description": "The merge set to perform the merges on",
          "possibleValues": [],
          "value": "TERMINOLOGY-MID",
          "values": []
        }
      ]
    },
    {
      "id": 40031,
      "lastModified": 1502676222000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676222000,
      "name": "SEMANTICTYPERESOLVER algorithm",
      "description": "SEMANTICTYPERESOLVER Algorithm",
      "algorithmKey": "SEMANTICTYPERESOLVER",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": [
        {
          "name": "WinLose",
          "fieldName": "winLose",
          "placeholder": "e.g. win",
          "type": "ENUM",
          "length": 200,
          "description": "Whether new SemanticTypes created during this insertion 'win' or 'lose' to old semantic types.",
          "possibleValues": [
            "win",
            "lose"
          ],
          "value": "lose",
          "values": []
        }
      ]
    },
    {
      "id": 40032,
      "lastModified": 1502676222000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676222000,
      "name": "UPDATERELEASABILITY algorithm",
      "description": "UPDATERELEASABILITY Algorithm",
      "algorithmKey": "UPDATERELEASABILITY",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40033,
      "lastModified": 1502676223000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676223000,
      "name": "BEQUEATH algorithm",
      "description": "BEQUEATH Algorithm",
      "algorithmKey": "BEQUEATH",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40034,
      "lastModified": 1502676223000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676223000,
      "name": "REPORTCHECKLIST algorithm",
      "description": "REPORTCHECKLIST Algorithm",
      "algorithmKey": "REPORTCHECKLIST",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40035,
      "lastModified": 1502676223000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676223000,
      "name": "MATRIXINIT algorithm",
      "description": "MATRIXINIT Algorithm",
      "algorithmKey": "MATRIXINIT",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40036,
      "lastModified": 1502676223000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676223000,
      "name": "PREFNAMES algorithm",
      "description": "PREFNAMES Algorithm",
      "algorithmKey": "PREFNAMES",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    },
    {
      "id": 40037,
      "lastModified": 1502676224000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676223000,
      "name": "REPARTITION algorithm",
      "description": "REPARTITION Algorithm",
      "algorithmKey": "REPARTITION",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": [
        {
          "name": "Workflow Bin Type",
          "fieldName": "type",
          "placeholder": "e.g. MUTUALLY_EXCLUSIVE",
          "type": "ENUM",
          "length": 40,
          "description": "The type of workflow bin to repartition",
          "possibleValues": [
            "REPORT_DEFINITIONS",
            "MID_VALIDATION_OTHER",
            "MID_VALIDATION",
            "QUALITY_ASSURANCE",
            "QUALITY_ASSURANCE_2",
            "MUTUALLY_EXCLUSIVE"
          ],
          "value": "MUTUALLY_EXCLUSIVE",
          "values": []
        }
      ]
    },
    {
      "id": 40038,
      "lastModified": 1502676224000,
      "lastModifiedBy": "admin",
      "timestamp": 1502676224000,
      "name": "POSTINSERTION algorithm",
      "description": "POSTINSERTION Algorithm",
      "algorithmKey": "POSTINSERTION",
      "enabled": true,
      "processId": 39854,
      "projectId": 39751,
      "parameters": []
    }
  ]
}